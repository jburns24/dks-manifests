---
# https://kubernetes.io/docs/concepts/configuration/configmap/
apiVersion: v1
kind: ConfigMap
metadata:
  name: dks-api-config
data:
  SPRING_PROFILES_ACTIVE: dev 
  JAVA_ENABLE_DEBUG: "false" 
  JAVA_DEBUG_PORT: "5005"
  DB_HOST: dks-db
  DB_NAME: dks_db
  PGPORT: "5432"
  DB_ROLE_NAME: "dks-user"
  DB_ROLE_PASSWORD: "dks-db-password"
  POSTGRES_USER: "postgres-user"
  POSTGRES_PASSWORD: "postgres-password"
---
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dks-api
  labels:
    app: dks-api
spec:
  selector:
    matchLabels:
      app: dks-api
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container:  dks-api
      labels:
        app: dks-api
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name: dks-api
        image: jburns24/dks-api:latest
        imagePullPolicy: IfNotPresent
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 100Mi
        #   limits:
        #     cpu: 100m
        #     memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /actuator/health
        #     port: 8080
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 2
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        envFrom:
          - configMapRef:
             name: dks-api-config
        ports:
        - containerPort: 8080
          name: dks-api
      restartPolicy: Always
---

# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: dks-api
spec:
  selector:
    app: dks-api
  ports:
  - name: dks-api
    protocol: TCP
    port: 8080
    targetPort: 8080
---

